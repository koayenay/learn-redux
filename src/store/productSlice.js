import { createSlice, createAsyncThunk } from "@reduxjs/toolkit"

// Define the initial state for the products
const initialState = {
  data: [],
  status: "idle",
}

// Create an async thunk action to fetch the products
export const getProducts = createAsyncThunk("products/get", async () => {
  const response = await fetch("https://fakestoreapi.com/products")
  const data = await response.json()
  return data
})

// Create a product slice using createSlice function
const productSlice = createSlice({
  name: "products", // Specify the name of the slice
  initialState, // Set the initial state for the products
  reducers: {
    // You can add additional reducers here if needed
  },
  extraReducers: (builder) => {
    builder
      // Handle the pending state of the getProducts action
      .addCase(getProducts.pending, (state, action) => {
        state.status = "loading"
      })
      // Handle the fulfilled state of the getProducts action
      .addCase(getProducts.fulfilled, (state, action) => {
        state.data = action.payload
        state.status = "idle"
      })
      // Handle the rejected state of the getProducts action
      .addCase(getProducts.rejected, (state, action) => {
        state.status = "error"
      })
  },
})

// Export the fetchProducts action from the productSlice.actions object
export const { fetchProducts } = productSlice.actions

// Export the reducer function generated by createSlice as the default export
export default productSlice.reducer
